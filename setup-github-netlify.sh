#!/bin/bash

# =============================================================================
# MAIS PWA - GitHub + Netlify Integration Setup
# Configuraci√≥n autom√°tica de tokens y despliegue continuo
# =============================================================================

set -e

echo "üîß MAIS PWA - Configuraci√≥n GitHub + Netlify"
echo "============================================="

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check GitHub CLI authentication
check_gh_auth() {
    print_status "Verificando autenticaci√≥n de GitHub CLI..."
    
    if ! gh auth status &>/dev/null; then
        print_warning "GitHub CLI no est√° autenticado"
        echo ""
        echo "üîê Para configurar GitHub CLI:"
        echo "1. Ejecuta: gh auth login"
        echo "2. Selecciona: GitHub.com"
        echo "3. Selecciona: HTTPS"
        echo "4. Autentica con tu navegador"
        echo ""
        read -p "¬øQuieres autenticar ahora? (y/n): " auth_now
        
        if [ "$auth_now" = "y" ] || [ "$auth_now" = "Y" ]; then
            gh auth login
        else
            print_error "Autenticaci√≥n requerida para continuar"
            exit 1
        fi
    else
        print_success "GitHub CLI autenticado correctamente"
    fi
}

# Push c√≥digo a GitHub
push_to_github() {
    print_status "Subiendo c√≥digo a GitHub..."
    
    # Add all files
    git add .
    
    # Commit if there are changes
    if git diff --staged --quiet; then
        print_warning "No hay cambios para commitear"
    else
        git commit -m "üöÄ PRODUCTION READY: Auto-deploy setup

‚ú® GitHub Actions configurado para despliegue autom√°tico
üîß Netlify integration con GitHub
‚ö° Deploy autom√°tico en cada push a main
üõ°Ô∏è Variables de entorno seguras
üéØ PWA lista para producci√≥n continua

ü§ñ Generated with Claude Code
Co-Authored-By: Claude <noreply@anthropic.com>"
    fi
    
    # Push to GitHub
    print_status "Pushing a GitHub..."
    git push -u origin main --force
    
    print_success "C√≥digo subido a GitHub correctamente"
}

# Get Netlify site info
get_netlify_info() {
    print_status "Obteniendo informaci√≥n de Netlify..."
    
    echo ""
    echo "üåê Para configurar el despliegue autom√°tico necesitas:"
    echo "1. üîë NETLIFY_AUTH_TOKEN"
    echo "2. üÜî NETLIFY_SITE_ID"
    echo ""
    
    print_warning "üìã PASOS PARA OBTENER TOKENS:"
    echo ""
    echo "üîë NETLIFY_AUTH_TOKEN:"
    echo "   1. Ve a: https://app.netlify.com/user/applications"
    echo "   2. Clic en 'New access token'"
    echo "   3. Nombre: 'MAIS PWA GitHub Actions'"
    echo "   4. Copia el token generado"
    echo ""
    
    echo "üÜî NETLIFY_SITE_ID:"
    echo "   1. Ve a tu sitio en Netlify"
    echo "   2. Site settings ‚Üí General ‚Üí Site details"
    echo "   3. Copia el 'Site ID' (ej: abc123-def456-ghi789)"
    echo ""
    
    echo "ü§ñ GEMINI_API_KEY:"
    echo "   1. Ve a: https://makersuite.google.com/app/apikey"
    echo "   2. Create API Key"
    echo "   3. Copia la key generada"
    echo ""
}

# Configure GitHub secrets
configure_github_secrets() {
    print_status "Configurando secrets en GitHub..."
    
    echo ""
    read -p "üîë Pega tu NETLIFY_AUTH_TOKEN: " NETLIFY_AUTH_TOKEN
    read -p "üÜî Pega tu NETLIFY_SITE_ID: " NETLIFY_SITE_ID
    read -p "ü§ñ Pega tu VITE_GEMINI_API_KEY: " VITE_GEMINI_API_KEY
    
    if [ -n "$NETLIFY_AUTH_TOKEN" ]; then
        gh secret set NETLIFY_AUTH_TOKEN --body "$NETLIFY_AUTH_TOKEN"
        print_success "NETLIFY_AUTH_TOKEN configurado"
    fi
    
    if [ -n "$NETLIFY_SITE_ID" ]; then
        gh secret set NETLIFY_SITE_ID --body "$NETLIFY_SITE_ID"
        print_success "NETLIFY_SITE_ID configurado"
    fi
    
    if [ -n "$VITE_GEMINI_API_KEY" ]; then
        gh secret set VITE_GEMINI_API_KEY --body "$VITE_GEMINI_API_KEY"
        print_success "VITE_GEMINI_API_KEY configurado"
    fi
    
    print_success "Secrets de GitHub configurados"
}

# Main execution
main() {
    echo -e "${GREEN}"
    echo "  ______ _ _   _    _       _"
    echo " |  ____(_) | | |  | |     | |"
    echo " | |__   _| |_| |__| |_   _| |__"
    echo " |  __| | | __|  __  | | | | '_ \\"
    echo " | |____| | |_| |  | | |_| | |_) |"
    echo " |______|_|\\__|_|  |_|\\__,_|_.__/"
    echo ""
    echo "    GitHub + Netlify Integration"
    echo -e "${NC}"
    
    check_gh_auth
    push_to_github
    get_netlify_info
    
    echo ""
    read -p "¬øTienes los tokens listos para configurar? (y/n): " configure_now
    
    if [ "$configure_now" = "y" ] || [ "$configure_now" = "Y" ]; then
        configure_github_secrets
        
        echo ""
        print_success "üéâ ¬°Configuraci√≥n completada!"
        echo ""
        echo "‚úÖ Pr√≥ximos pasos autom√°ticos:"
        echo "  1. GitHub Actions se ejecutar√° en cada push"
        echo "  2. Build autom√°tico de la PWA"
        echo "  3. Deploy autom√°tico a Netlify"
        echo "  4. URL de producci√≥n actualizada"
        echo ""
        echo "üåê Tu repositorio: https://github.com/DANIELAGORA/cauca"
        echo "üöÄ GitHub Actions: https://github.com/DANIELAGORA/cauca/actions"
        
    else
        echo ""
        print_warning "‚ö†Ô∏è  Para completar la configuraci√≥n:"
        echo "1. Obt√©n los tokens de Netlify y Gemini"
        echo "2. Ejecuta: gh secret set NETLIFY_AUTH_TOKEN --body 'tu_token'"
        echo "3. Ejecuta: gh secret set NETLIFY_SITE_ID --body 'tu_site_id'"  
        echo "4. Ejecuta: gh secret set VITE_GEMINI_API_KEY --body 'tu_api_key'"
        echo "5. Haz push al repositorio para activar el deploy autom√°tico"
    fi
    
    echo ""
    print_success "‚ú® MAIS PWA configurado para CI/CD"
}

# Run main function
main